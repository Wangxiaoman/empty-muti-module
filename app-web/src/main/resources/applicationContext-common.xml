<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-autowire="byName" default-lazy-init="true">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:SystemGlobals.properties</value>
		</property>
	</bean>
	
	<!-- 初始化redis -->
	<bean id="redisEngine" class="com.three.cache.RedisEngine"
		destroy-method="destroy" lazy-init="true" init-method="init">
		<property name="redisIps" value="${redis.redisIps}" />
		<property name="redisTestOnBorrow" value="${redis.redisTestOnBorrow}" />
		<property name="redisTestOnReturn" value="${redis.redisTestOnReturn}" />
		<property name="redisMaxIdle" value="${redis.redisMaxIdle}" />
		<property name="redisMinIdle" value="${redis.redisMinIdle}" />
		<property name="redisTestWhileIdle" value="${redis.redisTestWhileIdle}" />
		<property name="redisNumTestsPerEvictionRun" value="${redis.redisNumTestsPerEvictionRun}" />
		<property name="redisTimeBetweenEvictionRunsMillis" value="${redis.redisTimeBetweenEvictionRunsMillis}" />
	</bean>
	
	<bean id="redisManager" class="com.three.cache.RedisManager">
		<property name="redisEngine">
			<ref bean="redisEngine" />
		</property>	
	</bean>

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	  <property name="corePoolSize" value="${task.core_pool_size}" />
	  <property name="maxPoolSize" value="${task.max_pool_size}" />
	  <property name="queueCapacity" value="${task.queue_capacity}" />
	  <property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>
	
<!-- 	<bean id="springContextUtil" class="com.blink.utils.SpringContextUtil" lazy-init="false"></bean> -->
	
	<!-- 数据库 -->
    <import resource="classpath:multi-datasource.xml"/>

	<!-- 定义视图解析器 ：视图解析的流程是 ModelAndView==》XmlViewResolver查找view的定义 -->
	<bean name="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="location" value="classpath:views.xml"></property>
		<property name="order" value="1"></property>
	</bean>

	<!--静态文件的的映射 -->
	<mvc:resources location="/**" mapping="/**" />
	<mvc:resources location="/assets/js/**" mapping="/assets/js/**" />
	<mvc:resources location="/assets/css/**" mapping="/assets/css/**" />
	
	
    <!-- 开启service层注解扫描 -->
	<context:component-scan base-package="com.three.service" />
	<!-- 使用注解事务 -->
	<tx:annotation-driven transaction-manager="multiMybatisTransactionManager" />
	
</beans>
